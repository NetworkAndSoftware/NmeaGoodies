<Window x:Class="Experiment3.MainWindow"
        x:Name="Main"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Experiment3"
        xmlns:viewModels="clr-namespace:Experiment3.ViewModels"
        xmlns:helpers="clr-namespace:Experiment3.Helpers"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525" WindowStyle="None" SizeToContent="WidthAndHeight" ResizeMode="NoResize"
        AllowsTransparency="True" MouseDown="Window_MouseDown" 
        Deactivated="Main_Deactivated" Loaded="Main_Loaded" FontSize="16"  
        >

    <Window.DataContext>
        <viewModels:MainViewModel/>
    </Window.DataContext>
    <Window.Background >
        <SolidColorBrush Opacity="0.5"></SolidColorBrush>
    </Window.Background>
    <Window.Resources>
        <helpers:EnumMatchToBooleanConverter x:Key="EnumConverter" />
        <helpers:DoubleQuantityConverter x:Key="DoubleQuantityConverter"/>
        <helpers:NotConverter x:Key="NotConverter"/>
        <helpers:ULongQuantityConverter x:Key="ULongWithUpdateTimeConverter"/>
        <helpers:QuantityWithCompassValueAsTrueConverter x:Key="QuantityWithCompassValueAsTrueConverter"/>
        <helpers:QuantityWithCompassValueAsMagneticConverter x:Key="QuantityWithCompassValueAsMagneticConverter"/>
        <helpers:NumberFormatConverter x:Key="NumberFormatConverter"/>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="Left" Command="{Binding Path=AutopilotControl.LeftCommand}" />
        <KeyBinding Key="Right" Command="{Binding Path=AutopilotControl.RightCommand}" />
        <KeyBinding Key="A" Command="{Binding Path=AutopilotControl.EnabledCommand}" />
        <KeyBinding Key="X" Command="{Binding Path=WindowCloseCommand}"/>
        <KeyBinding Key="Q" Command="{Binding Path=WindowCloseCommand}"/>
        <KeyBinding Key="C" Command="{Binding Path=AutopilotControl.SetToHeadingCommand}"></KeyBinding>
        <KeyBinding Key="M" Command="{Binding Path=AutopilotControl.MagneticCommand}"></KeyBinding>
        <KeyBinding Key="T" Command="{Binding Path=AutopilotControl.TrueCommand}"></KeyBinding>
        <KeyBinding Key="H" Command="{Binding Path=HelpCommand}"></KeyBinding>
        <KeyBinding Key="F1" Command="{Binding Path=HelpCommand}"></KeyBinding>
    </Window.InputBindings>

    <StackPanel>
        <Border CornerRadius="6"
                BorderBrush="Gray"
                BorderThickness="2"
                Padding="2"
                Background="Gray">
            <StackPanel >

                <Label  Foreground="White" >Autopilot Control</Label>
                <StackPanel Background="White">
                    <WrapPanel Background="White">
                        <Label Content="Course"/>
                        <Button Content="&lt;" Command="{Binding Path=AutopilotControl.LeftCommand}" />
                        <TextBox Name="TextBox" Text="{Binding Path=AutopilotControl.HeadingValue, Mode=TwoWay, StringFormat=F1}" Margin="0,0,1,0" IsReadOnly="true" />
                        <Button Content="&gt;" Command="{Binding Path=AutopilotControl.RightCommand}" />
                        <WrapPanel >
                            <RadioButton GroupName="RadioBodMagnetic" IsChecked="{Binding Path=AutopilotControl.HeadingMagnetic, Mode=TwoWay}">magnetic</RadioButton>
                            <RadioButton GroupName="RadioBodMagnetic" IsChecked="{Binding Path=AutopilotControl.HeadingMagnetic, Mode=TwoWay, Converter={StaticResource NotConverter}}">true</RadioButton>
                        </WrapPanel>

                    </WrapPanel>
                    <CheckBox IsChecked="{Binding Path=AutopilotControl.Enabled, Mode=TwoWay}">Enabled (A)</CheckBox>
                    <CheckBox IsChecked="{Binding Path=AutopilotControl.CopyCurrentHeading, Mode=TwoWay}">Send Current Heading (C)</CheckBox>
                </StackPanel>
            </StackPanel>
        </Border>
        <Border CornerRadius="6"
                BorderBrush="Gray"
                BorderThickness="2"
                Padding="2"
                Background="Gray">
            <StackPanel>
                <Label  Foreground="White" >Stats</Label>

                <Grid Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column ="0" Grid.Row="1" HorizontalAlignment="Right">Heading:</Label>
                    <Label Grid.Column ="0" Grid.Row="2" HorizontalAlignment="Right">Cog:</Label>
                    <Label Grid.Column ="0" Grid.Row="3" HorizontalAlignment="Right">CorrectedHeading:</Label>
                    <Label Grid.Column ="0" Grid.Row="4" HorizontalAlignment="Right">Mean deviation:</Label>
                    <Label Grid.Column ="0" Grid.Row="5" HorizontalAlignment="Right">Number of samples:</Label>
                    <Label Grid.Column ="0" Grid.Row="6" HorizontalAlignment="Right">Speed over ground:</Label>

                    <Label Grid.Column="1" Grid.Row="0" Content="True"></Label>
                    <Label Grid.Column="2" Grid.Row="0" Content="Magnetic"></Label>


                    <Label Grid.Column="1" Grid.Row="1" Content="{Binding Path=Stats.Heading,Mode=OneWay,Converter={StaticResource QuantityWithCompassValueAsTrueConverter}}"></Label>
                    <Label Grid.Column="1" Grid.Row="2" Content="{Binding Path=Stats.Cog,Mode=OneWay,Converter={StaticResource QuantityWithCompassValueAsTrueConverter}}"></Label>
                    <Label Grid.Column="1" Grid.Row="3" Content="{Binding Path=Stats.CorrectedHeading,Mode=OneWay, Converter={StaticResource QuantityWithCompassValueAsTrueConverter}}"></Label>

                    <Label Grid.Column="2" Grid.Row="1" Content="{Binding Path=Stats.Heading,Mode=OneWay,Converter={StaticResource QuantityWithCompassValueAsMagneticConverter}}"></Label>
                    <Label Grid.Column="2" Grid.Row="2" Content="{Binding Path=Stats.Cog,Mode=OneWay,Converter={StaticResource QuantityWithCompassValueAsMagneticConverter}}"></Label>
                    <Label Grid.Column="2" Grid.Row="3" Content="{Binding Path=Stats.CorrectedHeading,Mode=OneWay, Converter={StaticResource QuantityWithCompassValueAsMagneticConverter}}"></Label>

                    <Label Grid.Column="1" Grid.Row="4" Content="{Binding Path=Stats.MeanDeviation,Mode=OneWay, Converter={StaticResource NumberFormatConverter}, ConverterParameter=F1}" Grid.ColumnSpan="2"></Label>
                    <Label Grid.Column="1" Grid.Row="5" Content="{Binding Path=Stats.SampleCount,Mode=OneWay}" Grid.ColumnSpan="2"></Label>
                    <Label Grid.Column="1" Grid.Row="6" Content="{Binding Path=Stats.Sog,Mode=OneWay,Converter={StaticResource DoubleQuantityConverter}, ConverterParameter=F1}" Grid.ColumnSpan="2"></Label>

                </Grid>
            </StackPanel>
        </Border>
    </StackPanel>
</Window>
